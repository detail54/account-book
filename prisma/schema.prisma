generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model StoreCategory {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    @unique
  stores   Store[]
  accounts Account[]
}

model Store {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  category   StoreCategory @relation(fields: [categoryId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  categoryId String        @db.ObjectId
  name       String        @unique
  accounts   Account[]
}

model Account {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  user       User          @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId     String        @db.ObjectId
  regDt      DateTime      @default(now())
  updatedDt  DateTime      @updatedAt
  paymentDt  DateTime
  category   StoreCategory @relation(fields: [categoryId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  categoryId String        @db.ObjectId
  store      Store         @relation(fields: [storeId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  storeId    String        @db.ObjectId
  amount     Int
  memo       String?
}

model Income {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId    String   @db.ObjectId
  regDt     DateTime @default(now())
  updatedDt DateTime @updatedAt
  incomeDt  DateTime
  amount    Int
  memo      String?
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  userName String
  password String
  incomes  Income[]
  accounts Account[]
  regDt    DateTime  @default(now())

  @@unique([userName])
}
